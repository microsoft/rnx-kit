"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[765],{1387:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"tools/react-native-host","title":"react-native-host","description":"Build","source":"@site/docs/tools/react-native-host.md","sourceDirName":"tools","slug":"/tools/react-native-host","permalink":"/rnx-kit/docs/tools/react-native-host","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/react-native-host.md","tags":[],"version":"current","frontMatter":{},"sidebar":"toolsSidebar","previous":{"title":"react-native-auth","permalink":"/rnx-kit/docs/tools/react-native-auth"},"next":{"title":"react-native-lazy-index","permalink":"/rnx-kit/docs/tools/react-native-lazy-index"}}');var s=n(4848),o=n(8453);const a={},l="react-native-host",r={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"iOS/macOS",id:"iosmacos",level:3},{value:"API",id:"api",level:2},{value:"ReactNativeHost",id:"reactnativehost",level:3},{value:"<code>initWithConfig:</code>",id:"initwithconfig",level:4},{value:"<code>shutdown</code>",id:"shutdown",level:4},{value:"<code>usingModule:block:</code>",id:"usingmoduleblock",level:4},{value:"<code>hostFromRootView:</code>",id:"hostfromrootview",level:4},{value:"<code>viewWithModuleName:initialProperties:</code>",id:"viewwithmodulenameinitialproperties",level:4},{value:"RNXConfig",id:"rnxconfig",level:3},{value:"<code>isDevLoadingViewEnabled</code>",id:"isdevloadingviewenabled",level:4},{value:"<code>shouldReleaseBridgeWhenBackgrounded</code>",id:"shouldreleasebridgewhenbackgrounded",level:4},{value:"<code>onFatalError</code>",id:"onfatalerror",level:4}];function c(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"react-native-host",children:"react-native-host"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://github.com/microsoft/rnx-kit/actions/workflows/build.yml",children:(0,s.jsx)(i.img,{src:"https://github.com/microsoft/rnx-kit/actions/workflows/build.yml/badge.svg",alt:"Build"})}),"\n",(0,s.jsx)(i.a,{href:"https://www.npmjs.com/package/@rnx-kit/react-native-host",children:(0,s.jsx)(i.img,{src:"https://img.shields.io/npm/v/@rnx-kit/react-native-host",alt:"npm version"})})]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"@rnx-kit/react-native-host"})," simplifies React Native initialization."]}),"\n",(0,s.jsxs)(i.p,{children:["The aim of this package is to provide a backwards (and forwards) compatible way\nof initializing React Native, regardless of whether you're on New Architecture\nor have gone fully bridgeless.",(0,s.jsx)(i.code,{children:"@rnx-kit/react-native-host"})," will also a provide a\nsimple way to enable split bundles and service delivery."]}),"\n",(0,s.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-sh",children:"yarn add @rnx-kit/react-native-host --dev\n"})}),"\n",(0,s.jsx)(i.p,{children:"or if you're using npm"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-sh",children:"npm add --save-dev @rnx-kit/react-native-host\n"})}),"\n",(0,s.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(i.h3,{id:"iosmacos",children:"iOS/macOS"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:"[!NOTE]"}),"\n",(0,s.jsxs)(i.p,{children:["For a working example how to use this library for iOS/macOS, see\n",(0,s.jsx)(i.a,{href:"https://github.com/microsoft/react-native-test-app/commit/241ddaf83e74f5d53a9144bcfd52f8f948425fcb#diff-8c45578b4f5841935bf037692cf65041333e9415552dcde4ac6c77bac00cd1b5",children:"react-native-test-app"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["To avoid accidental autolinking, ",(0,s.jsx)(i.code,{children:"@rnx-kit/react-native-host"})," must be manually\nlinked. In your ",(0,s.jsx)(i.code,{children:"Podfile"}),", add the following line:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-rb",children:"pod 'ReactNativeHost', :path => '../node_modules/@rnx-kit/react-native-host'\n"})}),"\n",(0,s.jsx)(i.p,{children:"Adjust the path accordingly to your project setup. If you prefer a more dynamic\napproach, you can also try using this script:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-rb",children:"proj_dir = Pathname.new(__dir__)\nproj_dir = proj_dir.parent until\n  File.exist?(\"#{proj_dir}/node_modules/@rnx-kit/react-native-host/ReactNativeHost.podspec\") ||\n  proj_dir.expand_path.to_s == '/'\n\npod 'ReactNativeHost', :path => \"#{proj_dir}/node_modules/@rnx-kit/react-native-host\"\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Run ",(0,s.jsx)(i.code,{children:"pod install"})," at least once to make sure it gets added to your project. Then\nmake the following changes:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Replace instances of ",(0,s.jsx)(i.code,{children:"RCTBridgeDelegate"})," with ",(0,s.jsx)(i.code,{children:"RNXHostConfig"}),". The latter is a\nsuperset and is backwards compatible."]}),"\n",(0,s.jsxs)(i.li,{children:["Replace instantiation of ",(0,s.jsx)(i.code,{children:"RCTBridge"})," with ",(0,s.jsx)(i.code,{children:"ReactNativeHost"}),". ",(0,s.jsx)(i.code,{children:"ReactNativeHost"}),"\nwill instantiate the appropriate modules required for your setup. It will also\nhandle New Architecture configuration as necessary."]}),"\n",(0,s.jsxs)(i.li,{children:["Instead of instantiating ",(0,s.jsx)(i.code,{children:"RCTRootView"})," directly, use\n",(0,s.jsx)(i.code,{children:"-[ReactNativeHost viewWithModuleName:initialProperties:]"})," to create your root\nviews."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"For example, if you previously had something like this:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objc",children:"// AppDelegate.h\n@import React;\n@import UIKit;\n\n@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>\n@end\n\n// AppDelegate.m\n@implementation AppDelegate {\n    RCTBridge *_bridge;\n}\n\n- (BOOL)application:(UIApplication *)application\n    didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    ...\n\n    _bridge = [[RCTBridge alloc] initWithDelegate:self\n                                    launchOptions:launchOptions];\n    RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:_bridge\n                                                     moduleName:moduleName\n                                              initialProperties:initialProperties];\n\n    ...\n}\n\n@end\n"})}),"\n",(0,s.jsx)(i.p,{children:"You should instead have:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objc",children:"// AppDelegate.h\n@import ReactNativeHost;\n@import UIKit;\n\n@interface AppDelegate : UIResponder <UIApplicationDelegate, RNXHostConfig>\n@end\n\n// AppDelegate.m\n@implementation AppDelegate {\n    ReactNativeHost *_host;\n}\n\n- (BOOL)application:(UIApplication *)application\n    didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    ...\n\n    _host = [[ReactNativeHost alloc] initWithConfig:self];\n    UIView *rootView = [_host viewWithModuleName:moduleName\n                               initialProperties:initialProperties];\n\n    ...\n}\n\n@end\n"})}),"\n",(0,s.jsx)(i.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(i.h3,{id:"reactnativehost",children:"ReactNativeHost"}),"\n",(0,s.jsx)(i.p,{children:"Instantiates the appropriate modules required for the setup. It handles New\nArchitecture if necessary."}),"\n",(0,s.jsx)(i.h4,{id:"initwithconfig",children:(0,s.jsx)(i.code,{children:"initWithConfig:"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Swift name:"})," ",(0,s.jsx)(i.code,{children:"init(_:)"})]}),"\n",(0,s.jsxs)(i.p,{children:["Creates an instance of ",(0,s.jsx)(i.code,{children:"ReactNativeHost"})," using the designated initializer."]}),"\n",(0,s.jsx)(i.p,{children:"Objective-C:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objc",children:"ReactNativeHost *host = [[ReactNativeHost alloc] initWithConfig:self];\n"})}),"\n",(0,s.jsx)(i.p,{children:"Swift:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:"let host = ReactNativeHost(config: self)\n"})}),"\n",(0,s.jsx)(i.h4,{id:"shutdown",children:(0,s.jsx)(i.code,{children:"shutdown"})}),"\n",(0,s.jsx)(i.p,{children:"Shuts down the React Native instance"}),"\n",(0,s.jsx)(i.h4,{id:"usingmoduleblock",children:(0,s.jsx)(i.code,{children:"usingModule:block:"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Swift name:"})," ",(0,s.jsx)(i.code,{children:"using(module:block:)"})]}),"\n",(0,s.jsx)(i.p,{children:"Retrieves or initializes a desired native module. Parameters:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"moduleClass"})," - class of the native module to initialize or retrieve"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"block"})," - block that gets called when the native module is retrieved"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Objective-C:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objc",children:"[host usingModule:[MyNativeModuleClass class] block:^(id<RCTBridgeModule> module) {\n    if (![module isKindOfClass:[MyNativeModuleClass class]]) {\n        return;\n    }\n    MyNativeModuleClass *myNativeModule = (MyNativeModuleClass *)module;\n    // Use the native module here\n}];\n"})}),"\n",(0,s.jsx)(i.p,{children:"Swift:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:"host.using(module: MyNativeModuleClass.self) {\n  guard let myNativeModule = module as? MyNativeModuleClass else {\n    return\n  }\n  // Use the native module here\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"hostfromrootview",children:(0,s.jsx)(i.code,{children:"hostFromRootView:"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Swift name:"})," ",(0,s.jsx)(i.code,{children:"host(from:)"})]}),"\n",(0,s.jsxs)(i.p,{children:["Retrieves the ",(0,s.jsx)(i.code,{children:"ReactNativeHost"})," instance that view belongs to."]}),"\n",(0,s.jsx)(i.h4,{id:"viewwithmodulenameinitialproperties",children:(0,s.jsx)(i.code,{children:"viewWithModuleName:initialProperties:"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Swift name:"})," ",(0,s.jsx)(i.code,{children:"view(moduleName:initialProperties:)"})]}),"\n",(0,s.jsx)(i.p,{children:"Creates a React root view with the specified module and initial properties.\nParameters:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"moduleName"})," - name of the module to create root view of"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"initialProperties"})," - properties passed to the module"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Objective-C:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objc",children:"ReactNativeHost *host = [[ReactNativeHost alloc] initWithConfig:self];\nUIView *rootView = [host viewWithModuleName:moduleName\n                          initialProperties:initialProperties];\n"})}),"\n",(0,s.jsx)(i.p,{children:"Swift:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:"let view = host.view(\n    moduleName: moduleName,\n    initialProperties: initialProperties\n)\n"})}),"\n",(0,s.jsx)(i.h3,{id:"rnxconfig",children:"RNXConfig"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"RNXHostConfig"})," is a superset of ",(0,s.jsx)(i.code,{children:"RCTBridgeDelegate"})," and it's backwards\ncompatible."]}),"\n",(0,s.jsx)(i.h4,{id:"isdevloadingviewenabled",children:(0,s.jsx)(i.code,{children:"isDevLoadingViewEnabled"})}),"\n",(0,s.jsx)(i.p,{children:"Returns whether the loading view should be visible while loading JavaScript"}),"\n",(0,s.jsx)(i.h4,{id:"shouldreleasebridgewhenbackgrounded",children:(0,s.jsx)(i.code,{children:"shouldReleaseBridgeWhenBackgrounded"})}),"\n",(0,s.jsx)(i.p,{children:"Returns whether the bridge should be released when the app is in the background"}),"\n",(0,s.jsx)(i.h4,{id:"onfatalerror",children:(0,s.jsx)(i.code,{children:"onFatalError"})}),"\n",(0,s.jsx)(i.p,{children:"Handles a fatal error"})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var t=n(6540);const s={},o=t.createContext(s);function a(e){const i=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);