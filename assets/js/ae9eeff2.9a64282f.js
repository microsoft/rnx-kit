"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[9666],{1582:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"tools/esbuild-plugin-import-path-remapper","title":"esbuild-plugin-import-path-remapper","description":"Build","source":"@site/docs/tools/esbuild-plugin-import-path-remapper.md","sourceDirName":"tools","slug":"/tools/esbuild-plugin-import-path-remapper","permalink":"/rnx-kit/docs/tools/esbuild-plugin-import-path-remapper","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/esbuild-plugin-import-path-remapper.md","tags":[],"version":"current","frontMatter":{},"sidebar":"toolsSidebar","previous":{"title":"console","permalink":"/rnx-kit/docs/tools/console"},"next":{"title":"eslint-plugin","permalink":"/rnx-kit/docs/tools/eslint-plugin"}}');var n=r(4848),s=r(8453);const o={},p="esbuild-plugin-import-path-remapper",l={},a=[{value:"Usage",id:"usage",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"esbuild-plugin-import-path-remapper",children:"esbuild-plugin-import-path-remapper"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://github.com/microsoft/rnx-kit/actions/workflows/build.yml",children:(0,n.jsx)(t.img,{src:"https://github.com/microsoft/rnx-kit/actions/workflows/build.yml/badge.svg",alt:"Build"})}),"\n",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/package/@rnx-kit/esbuild-plugin-import-path-remapper",children:(0,n.jsx)(t.img,{src:"https://img.shields.io/npm/v/@rnx-kit/esbuild-plugin-import-path-remapper",alt:"npm version"})})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"@rnx-kit/esbuild-plugin-import-path-remapper"})," remaps ",(0,n.jsx)(t.code,{children:"**/lib/**"})," imports to\n",(0,n.jsx)(t.code,{children:"**/src/**"}),". This is useful for packages that are not correctly exporting\neverything via their ",(0,n.jsx)(t.code,{children:"index.ts"}),", but you still want to consume the TypeScript\nfiles rather than the transpiled JavaScript."]}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(t.p,{children:["Add ",(0,n.jsx)(t.code,{children:"@rnx-kit/esbuild-plugin-import-path-remapper"})," to your build script plugins.\nThe package name filter argument to the plugin is an esbuild compatible regular\nexpression to match the packages to transform."]}),"\n",(0,n.jsxs)(t.p,{children:["For example, to remap all paths under the ",(0,n.jsx)(t.code,{children:"@rnx-kit"})," scope:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:'// esbuild.js\nconst ImportPathRemapperPlugin = require("@rnx-kit/esbuild-plugin-import-path-remapper");\n\nrequire("esbuild")\n  .build({\n    entryPoints: ["app.tsx"],\n    bundle: true,\n    outfile: "out.js",\n    plugins: [ImportPathRemapperPlugin("@rnx-kit")],\n  })\n  .catch(() => process.exit(1));\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>p});var i=r(6540);const n={},s=i.createContext(n);function o(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function p(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);