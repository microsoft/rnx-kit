"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[8059],{8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var r=i(6540);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},9402:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"tools/metro-serializer","title":"metro-serializer","description":"Build","source":"@site/docs/tools/metro-serializer.md","sourceDirName":"tools","slug":"/tools/metro-serializer","permalink":"/rnx-kit/docs/tools/metro-serializer","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/metro-serializer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"toolsSidebar","previous":{"title":"metro-resolver-symlinks","permalink":"/rnx-kit/docs/tools/metro-resolver-symlinks"},"next":{"title":"metro-serializer-esbuild","permalink":"/rnx-kit/docs/tools/metro-serializer-esbuild"}}');var t=i(4848),o=i(8453);const s={},c="metro-serializer",l={},a=[{value:"Usage",id:"usage",level:2},{value:"Expo",id:"expo",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"metro-serializer",children:"metro-serializer"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/microsoft/rnx-kit/actions/workflows/build.yml",children:(0,t.jsx)(n.img,{src:"https://github.com/microsoft/rnx-kit/actions/workflows/build.yml/badge.svg",alt:"Build"})}),"\n",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@rnx-kit/metro-serializer",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/npm/v/@rnx-kit/metro-serializer",alt:"npm version"})})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"@rnx-kit/metro-serializer"})," is Metro's default JavaScript bundle serializer, but\nwith support for plugins."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Import and set the serializer to ",(0,t.jsx)(n.code,{children:"serializer.customSerializer"})," in your\n",(0,t.jsx)(n.code,{children:"metro.config.js"}),", then add your desired plugins. For instance, to add\n",(0,t.jsx)(n.code,{children:"CyclicDependencies"})," and ",(0,t.jsx)(n.code,{children:"DuplicateDependencies"})," plugins:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-diff",children:' const { makeMetroConfig } = require("@rnx-kit/metro-config");\n+const {\n+  CyclicDependencies,\n+} = require("@rnx-kit/metro-plugin-cyclic-dependencies-detector");\n+const {\n+  DuplicateDependencies,\n+} = require("@rnx-kit/metro-plugin-duplicates-checker");\n+const { MetroSerializer } = require("@rnx-kit/metro-serializer");\n\n module.exports = makeMetroConfig({\n   projectRoot: __dirname,\n   serializer: {\n+    customSerializer: MetroSerializer([\n+      CyclicDependencies(),\n+      DuplicateDependencies(),\n+    ]),\n   },\n });\n'})}),"\n",(0,t.jsx)(n.h2,{id:"expo",children:"Expo"}),"\n",(0,t.jsxs)(n.p,{children:["If you are using Expo, you most likely don't want to use this serializer, since\nExpo uses its own custom serializer. For instance, to use the\n",(0,t.jsx)(n.code,{children:"CyclicDependencies"})," and ",(0,t.jsx)(n.code,{children:"DuplicateDependencies"})," plugins without the serializer:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const { getDefaultConfig } = require(\"expo/metro-config\");\n\n/** @type {import('expo/metro-config').MetroConfig} */\nconst config = getDefaultConfig(__dirname);\n\nconfig.serializer.customSerializer = async (\n  entryPoint,\n  preModules,\n  graph,\n  options\n) => {\n  CyclicDependencies({\n    // Options\n  })(entryPoint, preModules, graph, options);\n  DuplicateDependencies({\n    // Options\n  })(entryPoint, preModules, graph, options);\n  return await config.serializer.customSerializer(\n    entryPoint,\n    preModules,\n    graph,\n    options\n  );\n};\n\nmodule.exports = config;\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);