name: CI
on: pull_request
jobs:
  review:
    name: "Review"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup the toolchain
        uses: ./.github/actions/setup-toolchain
        with:
          node-version: 14
      - name: Ensure rnx-kit packages come from our repository
        run: |
          if grep rnx-kit yarn.lock; then
            exit 1
          fi
      - name: Deduplicate packages
        run: |
          npx yarn-deduplicate --list --fail
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v3
        with:
          path: .yarn-offline-mirror
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-7
      - name: Install package dependencies
        run: yarn ci
        env:
          CI_SKIP_GO: 1
      - name: Check for change files
        run: yarn change:check --since origin/${{ github.base_ref }}
      - name: Report formatting problems
        run: |
          yarn format
          git diff --exit-code
      - name: Report dependency problems
        run: |
          yarn rnx-dep-check --write
          git diff --exit-code
  build:
    name: "Build"
    strategy:
      matrix:
        node-version: [14, 16]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup the toolchain
        uses: ./.github/actions/setup-toolchain
        with:
          node-version: ${{ matrix.node-version }}
          go-version: "^1.14.0"
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v3
        with:
          path: .yarn-offline-mirror
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-7
      - name: Install package dependencies
        run: yarn ci
      - name: Build and test packages
        run: yarn build:ci --base origin/${{ github.base_ref }}
      - name: Ensure READMEs are up-to-date
        if: ${{ matrix.node-version == 14 && matrix.os == 'ubuntu-latest' }}
        run: |
          yarn update-readme
          git diff --exit-code
      - name: Bundle packages
        run: yarn bundle
      - name: Bundle test app with esbuild
        run: |
          yarn bundle+esbuild
        shell: bash
        working-directory: packages/test-app
  build-android:
    name: "Build Android"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup the toolchain
        uses: ./.github/actions/setup-toolchain
        with:
          node-version: 14
          jdk-version: 11
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v3
        with:
          path: .yarn-offline-mirror
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-7
      - name: Install npm dependencies
        run: yarn ci
        env:
          CI_SKIP_GO: 1
      - name: Build Android app
        run: |
          ./gradlew clean build
        working-directory: packages/test-app/android
  build-ios-expo-app:
    name: "Build iOS"
    uses: ./.github/workflows/build-ios.yml
    with:
      package: expo-app
      workspace-name: expoapp
      scheme-name: expoapp
  build-ios-test-app:
    name: "Build iOS"
    uses: ./.github/workflows/build-ios.yml
    with:
      package: test-app
      workspace-name: SampleCrossApp
      scheme-name: ReactTestApp
  build-website:
    name: "Build the website"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup the toolchain
        uses: ./.github/actions/setup-toolchain
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v3
        with:
          path: .yarn-offline-mirror
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-7
      - name: Install package dependencies
        run: yarn ci
        env:
          CI_SKIP_GO: 1
      - name: Build website
        run: yarn build
        working-directory: docsite
  label:
    name: "Label"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          sync-labels: true
        continue-on-error: true
