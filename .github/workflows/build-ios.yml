on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
      workspace-name:
        required: true
        type: string
      scheme-name:
        required: true
        type: string

jobs:
  build-ios:
    name: ${{ inputs.package }}
    runs-on: macos-11
    steps:
      - name: Set up Node 14
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Yarn cache
        uses: actions/cache@v3
        with:
          path: .yarn-offline-mirror
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-7
      - name: Set up CocoaPods cache
        uses: actions/cache@v3
        with:
          path: ${{ format('packages/{0}/ios/Pods', inputs.package) }}
          key: ${{ runner.os }}-${{ inputs.package }}-pods-${{ hashFiles(format('packages/{0}/ios/Podfile.lock', inputs.package)) }}
          restore-keys: |
            ${{ runner.os }}-${{ inputs.package }}-pods-
      - name: Install npm dependencies
        run: yarn ci
        env:
          CI_SKIP_GO: 1
      - name: Install Pods
        run: pod install --project-directory=ios
        working-directory: packages/${{ inputs.package}}
      - name: Build iOS app
        run: |
          device_name='iPhone 12'
          device=$(xcrun simctl list devices "${device_name}" available | grep "${device_name} (")
          re='\(([-0-9A-Fa-f]+)\)'
          [[ $device =~ $re ]] || exit 1
          xcodebuild -workspace ${{ inputs.workspace-name }}.xcworkspace -scheme ${{ inputs.scheme-name }} -destination "platform=iOS Simulator,id=${BASH_REMATCH[1]}" CODE_SIGNING_ALLOWED=NO COMPILER_INDEX_STORE_ENABLE=NO build | xcpretty
        working-directory: packages/${{ inputs.package }}/ios
        env:
          RCT_NO_LAUNCH_PACKAGER: 1
